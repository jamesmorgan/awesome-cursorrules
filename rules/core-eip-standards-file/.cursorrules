### Ethereum Improvement Proposals (EIPs) Standards Guide
### This file provides specifications and guidelines for implementing common ERC standards


```
// ERC20 Token Standard Interface
interface IERC20 {
  // Required Functions
  function totalSupply() external view returns (uint256);
  function balanceOf(address account) external view returns (uint256);
  function transfer(address recipient, uint256 amount) external returns (bool);
  function allowance(address owner, address spender) external view returns (uint256);
  function approve(address spender, uint256 amount) external returns (bool);
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);

  // Required Events
  event Transfer(address indexed from, address indexed to, uint256 value);
  event Approval(address indexed owner, address indexed spender, uint256 value);
}
```



```
// ERC721 Non-Fungible Token Standard Interface
interface IERC721 {
  // Required Functions
  function balanceOf(address owner) external view returns (uint256);
  function ownerOf(uint256 tokenId) external view returns (address);
  function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;
  function safeTransferFrom(address from, address to, uint256 tokenId) external;
  function transferFrom(address from, address to, uint256 tokenId) external;
  function approve(address to, uint256 tokenId) external;
  function setApprovalForAll(address operator, bool approved) external;
  function getApproved(uint256 tokenId) external view returns (address);
  function isApprovedForAll(address owner, address operator) external view returns (bool);

  // Required Events
  event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
  event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
  event ApprovalForAll(address indexed owner, address indexed operator, bool approved);
}
```


```
// ERC1155 Multi Token Standard Interface
interface IERC1155 {
  // Required Functions
  function balanceOf(address account, uint256 id) external view returns (uint256);
  function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);
  function setApprovalForAll(address operator, bool approved) external;
  function isApprovedForAll(address account, address operator) external view returns (bool);
  function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;
  function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;

  // Required Events
  event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
  event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
  event ApprovalForAll(address indexed account, address indexed operator, bool approved);
  event URI(string value, uint256 indexed id);
}
```


```
// ERC165 Interface
interface IERC165 {
  function supportsInterface(bytes4 interfaceId) external view returns (bool);
}
```


```
// ERC173 Ownable Interface
interface IERC173 {
  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  function owner() external view returns (address);
  function transferOwnership(address newOwner) external;
}
```


```
// ERC2981  Interface
interface IERC2981 {
  function royaltyInfo(uint256 tokenId, uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount);
  function supportsInterface(bytes4 interfaceId) external view returns (bool);
}
```

